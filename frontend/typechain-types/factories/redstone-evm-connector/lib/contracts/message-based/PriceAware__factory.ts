/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  PriceAware,
  PriceAwareInterface,
} from "../../../../../redstone-evm-connector/lib/contracts/message-based/PriceAware";

const _abi = [
  {
    inputs: [],
    name: "getMaxBlockTimestampDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMaxDataTimestampDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receviedSigner",
        type: "address",
      },
    ],
    name: "isSignerAuthorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_receivedTimestamp",
        type: "uint256",
      },
    ],
    name: "isTimestampValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class PriceAware__factory {
  static readonly abi = _abi;
  static createInterface(): PriceAwareInterface {
    return new utils.Interface(_abi) as PriceAwareInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PriceAware {
    return new Contract(address, _abi, signerOrProvider) as PriceAware;
  }
}
